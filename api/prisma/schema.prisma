// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  email     String    @unique
  hash      String
  userName  String    @unique
  firstName String?
  lastName  String?
  avatar    String?
  ownedGames Game[] @relation("owner")
  playerGames Game[] @relation("player")
  socket      String?
  tfaSecret   String?
  isTfaEnable Boolean @default(false)
  friends    User[]   @relation("Friends")
  friendsOf  User[]   @relation("Friends")

  chanOp    Channel[] @relation("channel_ops")
  chanOwner Channel[]
  channels  Channel[] @relation("channel_members")

  messages  Message[]



}

model Channel {
  id        Int       @id @default(autoincrement())
  title     String?   @unique
  password  String?
  type      String
  owner     User?     @relation(fields:[ownerId], references:[id])
  ownerId   Int?
  operators User[]    @relation("channel_ops")
  members   User[]    @relation("channel_members")
  messages  Message[]
}

model Message{
  id        Int       @id @default(autoincrement())
  date      DateTime  @default(now())
  content   String
  author    User ?    @relation(fields: [authorId], references:[id])
  authorId  Int?
  channel   Channel?  @relation(fields: [channelId], references:[id])
  channelId Int?

}

model Game {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner User @relation("owner", fields: [ownerId], references: [id])
  ownerId Int
  player User @relation("player", fields: [playerId], references: [id])
  playerId Int
  ownerScore Int
  playerScore Int
}
