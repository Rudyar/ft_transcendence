import { useEffect, useState } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import Input from "../../../components/Input/Input";
import { verifyTfaRequest } from "../../../api";
import Loader from "react-loaders";
import { useAlert } from "../../../context";

export default function VerifyTfa() {
	const location = useLocation();
	const { showAlert } = useAlert();
	const navigate = useNavigate();
	const [inputValue, setInputValue] = useState<string>("");
	const [isLoading, setIsLoading] = useState(true);
	const tmp_accessToken = location.state?.accessToken;

	async function handleInputChange(e: React.ChangeEvent<HTMLInputElement>) {
		setInputValue(e.target.value);
	}

	async function handleSubmit() {
		if (inputValue === "") return;
		const verificationCode = inputValue.replace(/\s/g, "");
		try {
			const res = await verifyTfaRequest(verificationCode, tmp_accessToken);
			if (res.ok) {
				navigate("/");
				showAlert("success", "Welcome back !")
			} else {
				const body = await res.json();
				navigate("/login");
				showAlert("error", body.message);
			}
		} catch (e) {
			console.error("Error sending qrCode verification values", e);
		}
	}

	useEffect(() => {
		function handleKeyPress(event: KeyboardEvent) {
			if (event.key === "Enter") {
				handleSubmit();
			}
		}
		window.addEventListener("keypress", handleKeyPress);
		return () => {
			window.removeEventListener("keypress", handleKeyPress);
		};
	});

	useEffect(() => {
		!tmp_accessToken ? navigate("/login") : setIsLoading(false);
	}, [tmp_accessToken, navigate]);

	return (
		<>
			{isLoading ? (
				<Loader
					type="line-scale-pulse-out"
					innerClassName="container d-flex align-items"
					active
				/>
			) : (
				<div className="container d-flex flex-column align-items justify-content">
					<h2 className="underTitle">Verify Two Factor Authentication</h2>
					<p className="d-flex justify-content mb-30 mt-10">
						Enter the code generated by your authenticator app.
					</p>
					<Input
						icon="fa-solid fa-key"
						type="text"
						name="userName"
						placeholder="Ex: 123456"
						value={inputValue}
						onChange={handleInputChange}
					/>
					<div className="d-flex flex-row mt-10">
						<button
							className="btn btn-primary p-5"
							type="submit"
							onClick={handleSubmit}
						>
							Validate
						</button>
						<button
							className="btn btn-reverse-primary ml-10"
							onClick={() => {
								navigate("/login");
							}}
						>
							Bak to login
						</button>
					</div>
				</div>
			)}
		</>
	);
}
